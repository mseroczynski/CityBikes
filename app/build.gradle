apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'

apply from: rootProject.file("buildsystem/output.gradle")

android {

  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidTargetSdkVersion

    applicationId rootProject.ext.androidApplicationId
    versionCode rootProject.ext.androidVersionCode
    versionName rootProject.ext.androidVersionName
    testInstrumentationRunner rootProject.ext.testInstrumentationRunner

    multiDexEnabled true

    resValue "string", "google_maps_api_key", googleMapsApiKey
  }

  sourceSets {
    main {
      java.srcDirs += 'src/main/kotlin'
    }

    debug {
      java.srcDirs += 'src/debug/kotlin'
      manifest.srcFile 'src/debug/manifests/AndroidManifest.xml'
    }

    test {
      java.srcDirs += 'src/test/kotlin'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  dexOptions {
    javaMaxHeapSize "4g"
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    // Exclude the Processor that is already packaged
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  signingConfigs {
    debug {
      storeFile rootProject.file("buildsystem/debug.keystore")
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    release {
      storeFile rootProject.file("buildsystem/debug.keystore")
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      applicationIdSuffix '.debug'

      minifyEnabled false
    }
    release {
      signingConfig signingConfigs.release

      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      minifyEnabled true
    }
  }
}

// DBFlow
kapt {
  generateStubs = true
}

dependencies {
  compile project(':spacelib')

  def dpn = rootProject.ext.dependencies
  def testDpn = rootProject.ext.testDependencies
  def debugDpn = rootProject.ext.debugDependencies

  compile dpn.supportAppCompat
  compile dpn.supportAnnotations
  compile dpn.supportDesign
  compile dpn.supportPalette
  compile dpn.supportCardView
  compile dpn.supportPercent
  compile dpn.supportPreference
  compile dpn.supportMultidex

  compile dpn.playServicesMaps
  compile dpn.playServicesLocation

  compile dpn.kotlinStdLib
  compile dpn.kotlinReflect

  compile dpn.dagger2
  kapt dpn.dagger2Compiler
  provided dpn.daggerJavaxAnnotation

  compile dpn.rxKotlin
  compile dpn.rxAndroid
  compile dpn.rxJavaProguardRules
  compile dpn.rxBindingKotlin
  compile dpn.rxBindingDesignKotlin
  compile dpn.rxBindingSupportV4Kotlin
  compile dpn.rxNetwork
  compile dpn.rxRelay
  compile dpn.rxPreferences
  compile dpn.reactivePermissions
  compile dpn.reactiveLocation

  kapt dpn.dbFlowProcessor
  compile dpn.dbFlowCore
  compile dpn.dbFlow
  compile dpn.dbFlowKotlinExt

  compile dpn.transformer
  provided dpn.transformerCompiler
  kapt dpn.transformerCompiler

  compile(dpn.retrofit2) {
    exclude module: 'okhttp'
  }
  compile dpn.retrofit2RxJava
  compile dpn.retrofit2Gson
  compile (dpn.retrofit2SimpleXml) {
    exclude module: 'stax'
    exclude module: 'stax-api'
    exclude module: 'xpp3'
  }
  compile dpn.okhttp3

  compile dpn.mosby
  compile dpn.mosbyViewstate
  compile dpn.timber
  compile dpn.iceKick

  compile dpn.materialTypeface
  compile dpn.materialishProgress
  compile dpn.calligraphy
  compile 'com.github.google:cameraview:c4af56f' // TODO

  // Unit tests
  testCompile testDpn.jUnit
  testCompile testDpn.mockitoCore
  testCompile testDpn.robolectric
  testCompile testDpn.robolectricMultidex

  kaptTest testDpn.dagger2Compiler

  // Debug libs
  debugCompile debugDpn.stetho
  debugCompile debugDpn.stethoOkHttp3
  debugCompile debugDpn.leakCanary
  debugCompile debugDpn.okhttp3LogInterceptor
  debugCompile debugDpn.tinyDancer

}

configurations.all {
  // Enforcing versions
  resolutionStrategy.force rootProject.ext.dependencies.rxJava
}
